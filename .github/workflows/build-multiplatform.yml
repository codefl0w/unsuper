name: Build Executables for All Platforms

on:
  push:
    tags:
      - 'V*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller numpy

      - name: Build Windows executable
        run: |
          pyinstaller --onefile --hidden-import=numpy --hide-console hide-early --collect-submodules numpy --collect-all numpy unsuper.py
          mv dist/unsuper.exe dist/unsuper_windows.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Upload Windows binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/unsuper_windows.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller numpy

      - name: Build macOS executable
        run: |
          pyinstaller --onefile --hidden-import=numpy --hide-console hide-early --collect-submodules numpy --collect-all numpy unsuper.py
          mv dist/unsuper dist/unsuper_macos

      - name: Upload macOS binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/unsuper_macos
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build Linux executable inside Docker (Ubuntu 20.04)
        run: |
          docker run --rm -v ${{ github.workspace }}:/app -w /app ubuntu:20.04 bash -c "
            apt update &&
            apt install -y python3 python3-pip python3-dev python3-venv build-essential &&
            pip3 install --upgrade pip &&
            pip3 install pyinstaller numpy &&
            pyinstaller --onefile --hidden-import=numpy --collect-submodules numpy --collect-all numpy unsuper.py &&
            mv dist/unsuper dist/unsuper_linux
          "

      - name: Upload Linux binary
        uses: softprops/action-gh-release@v1
        with:
          files: dist/unsuper_linux
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
